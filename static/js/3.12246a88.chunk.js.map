{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","MyPosts","React","memo","console","log","postsElements","posts","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPostsContainer","connect","state","profilePage","Component","ProfileStatusHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","content","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.12246a88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2G_qH\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__FT3fz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3_vMJ\",\"posts\":\"MyPosts_posts__1ANNG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3-DWC\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.item}>\r\n        <img src=\"https://img2.freepng.ru/20180329/bpq/kisspng-avatar-education-professor-user-profile-faculty-boss-5abcab3d64aff2.9884136415223140454124.jpg\" />\r\n        {props.message}\r\n        <div>\r\n          <span>like</span> {props.likesCount}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from '../../../utils/validators/validators';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  console.log('RENDER');\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post message={p.message} likesCount={p.likesCount} />\r\n  ));\r\n  let newPostElement = React.createRef();\r\n\r\n  // let onAddPost = () => {\r\n  //   props.addPost();\r\n  // };\r\n  // let onPostChange = () => {\r\n  //   let text = newPostElement.current.value;\r\n  //   props.updateNewPostText(text);\r\n  // };\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3> My posts </h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n        {/* <Post\r\n          message={postData[0].message}\r\n          likesCount={postData[0].likesCount}\r\n        />\r\n        <Post\r\n          message={postData[1].message}\r\n          likesCount={postData[1].likesCount}\r\n        /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder={'Enter your message'}\r\n          name={'newPostText'}\r\n          component={Textarea}\r\n          validate={[required, maxLength10]}\r\n        />\r\n        {/* <textarea\r\n          onChange={onPostChange}\r\n          ref={newPostElement}\r\n          value={props.newPostText}\r\n        /> */}\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n// const MyPostsContainer = (props) => {\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {(store) => {\r\n//         let state = store.getState();\r\n//         let addPost = () => {\r\n//           store.dispatch(addPostActionCreator());\r\n//         };\r\n//         let onPostChange = (text) => {\r\n//           let action = updateNewPostTextActionCreator(text);\r\n//           store.dispatch(action);\r\n//         };\r\n//         return (\r\n//           <MyPosts\r\n//             updateNewPostText={onPostChange}\r\n//             addPost={addPost}\r\n//             posts={state.profilePage.posts}\r\n//             newPostText={state.profilePage.newPostText}\r\n//           />\r\n//         );\r\n//       }}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     updateNewPostText: (text) => {\r\n//       let action = updateNewPostTextActionCreator(text);\r\n//       dispatch(action);\r\n//     },\r\n//     addPost: () => {\r\n//       dispatch(addPostActionCreator());\r\n//     },\r\n//   };\r\n// };\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n  addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  };\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true,\r\n    });\r\n  };\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false,\r\n    });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <span onDoubleClick={this.activateEditMode}>\r\n              {this.props.status || 'No Status'}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input\r\n              onChange={this.onStatusChange}\r\n              autoFocus={true}\r\n              onBlur={this.deactivateEditMode}\r\n              value={this.state.status}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusHook = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  // deactivateEditMode = () => {\r\n  //   this.setState({\r\n  //     editMode: false,\r\n  //   });\r\n  //   this.props.updateStatus(this.state.status);\r\n  // };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  // onStatusChange = (e) => {\r\n  //   this.setState({\r\n  //     status: e.currentTarget.value,\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || 'No Status'}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusHook;\r\n","import React from 'react';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusHook from './ProfileStatusHook';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div className={s.content}>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} />\r\n        <ProfileStatusHook status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport {\r\n  getStatus,\r\n  getUserProfile,\r\n  updateStatus,\r\n} from '../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n\r\n    // profileAPI.getProfile(userId).then((data) => {\r\n    //   this.props.setUserProfile(data);\r\n    // });\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n// let withRouterComponentContainer = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect(mapStateToProps, { getUserProfile })(\r\n//   withRouterComponentContainer\r\n// );\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}