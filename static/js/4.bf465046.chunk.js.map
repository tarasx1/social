{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.jsx","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsRedirect","state","isAuth","auth","maxLength50","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","DialogItem","path","id","className","s","dialog","active","to","Message","message","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","values","alert","sendMessage","compose","connect","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,iICG7MC,EAA0B,SAACC,GAC/B,MAAO,CACLC,OAAQD,EAAME,KAAKD,S,0CCEnBE,EAAcC,YAAiB,IAsBpBC,cAAU,CAAEC,KAAM,wBAAlBD,EApBQ,SAACE,GACtB,OACE,uBAAMC,SAAUD,EAAME,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,YAAa,qBACbC,KAAM,iBACNC,UAAWC,IACXC,SAAU,CAACC,IAAUb,OAIzB,8BACE,0D,0BCTOc,EAVI,SAACV,GAClB,IAAIW,EAAO,YAAcX,EAAMY,GAE/B,OACE,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACE,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBX,EAAMK,UCFjBa,EAJC,SAAClB,GACf,OAAO,qBAAKa,UAAWC,IAAEK,QAAlB,SAA4BnB,EAAMmB,WCkD5BC,EA5CC,SAACpB,GACf,IAAIP,EAAQO,EAAMqB,YACdC,EAAkB7B,EAAM8B,QAAQC,KAAI,SAACC,GAAD,OACtC,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBO,GAAIa,EAAEb,IAAZa,EAAEb,OAG/Bc,EAAmBjC,EAAMkC,SAASH,KAAI,SAACI,GAAD,OACxC,cAAC,EAAD,CAAST,QAASS,EAAET,QAAoBP,GAAIgB,EAAEhB,IAAZgB,EAAEhB,OAGjBnB,EAAMoC,eAiB3B,OACE,sBAAKhB,UAAWC,IAAES,QAAlB,UACE,qBAAKV,UAAWC,IAAEgB,aAAlB,SACGR,IAIH,sBAAKT,UAAWC,IAAEa,SAAlB,UACE,8BAAMD,IACN,cAAC,EAAD,CAAgBzB,SAdF,SAAC8B,GACnBC,MAAMD,EAAOF,gBACb7B,EAAMiC,YAAYF,EAAOF,0BCDdK,4BACbC,aAzBsB,SAAC1C,GACvB,MAAO,CACL4B,YAAa5B,EAAM4B,eAuBI,CACvBY,mBLzB4B,SAACG,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKtC,MAAMN,OACT,cAAC0C,EAAD,eAAeE,KAAKtC,QADI,cAAC,IAAD,CAAUiB,GAAG,eAHH,GACbsB,IAAMH,WAStC,OAHqCD,YAAQ3C,EAAR2C,CACnCE,KKeWH,CAKbd","file":"static/js/4.bf465046.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Db0q\",\"dialogsItems\":\"Dialogs_dialogsItems__1Dmte\",\"dialog\":\"Dialogs_dialog__13Trn\",\"active\":\"Dialogs_active__172Kd\",\"messages\":\"Dialogs_messages__K6Pj7\",\"message\":\"Dialogs_message__3NMBH\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst mapStateToPropsRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from '../../../utils/validators/validators';\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder={'Enter your message'}\r\n          name={'newMessageBody'}\r\n          component={Textarea}\r\n          validate={[required, maxLength50]}\r\n        />\r\n        {/* <textarea onChange={onNewMessageChange} value={newMessageBody} /> */}\r\n      </div>\r\n      <div>\r\n        <button>Send message</button>\r\n        {/* <button onClick={onSendMessageClick}>Send message</button> */}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} id={m.id} />\r\n  ));\r\n\r\n  let newMessageBody = state.newMessageBody;\r\n  //let addNewMessageElement = React.createRef();\r\n\r\n  // let onSendMessageClick = () => {\r\n  //   props.sendMessage();\r\n  // };\r\n\r\n  // let onNewMessageChange = (e) => {\r\n  //   let body = e.target.value;\r\n  //   props.updateNewMessageBody(body);\r\n  // };\r\n\r\n  let addNewMessage = (values) => {\r\n    alert(values.newMessageBody);\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n        {/* <DialogItem name={dialogsData[0].name} id={dialogsData[0].id} />\r\n        <DialogItem name={dialogsData[1].name} id={dialogsData[1].id} /> */}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageForm onSubmit={addNewMessage} />\r\n        {/* <Message message={messagesData[0].message} id={messagesData[0].id} />\r\n        <Message message={messagesData[1].message} id={messagesData[1].id} /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nimport { sendMessage } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     sendMessage: () => {\r\n//       dispatch(sendMessageCreator());\r\n//     },\r\n//     updateNewMessageBody: (body) => {\r\n//       dispatch(updateNewMessageBodyCreator(body));\r\n//     },\r\n//   };\r\n// };\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(mapStateToProps, {\r\n//   sendMessage,\r\n//   updateNewMessageBody,\r\n// })(AuthRedirectComponent);\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    sendMessage,\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}